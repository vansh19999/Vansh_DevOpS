apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: {{ include "hello.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "hello.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  replicas: {{ .Values.replicas }}
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "hello.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  strategy:
    canary:
      stableService: {{ include "hello.fullname" . }}
      canaryService: {{ include "hello.fullname" . }}-canary
      trafficRouting:
        nginx: {}     # NGINX Ingress controller does traffic splits
      steps:
        - setWeight: 10
        - pause: { duration: 30 }
        - setWeight: 25
        - pause: { duration: 30 }
        - setWeight: 50
        - pause: { duration: 30 }
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "hello.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: app
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          ports:
            - containerPort: {{ .Values.service.targetPort }}
          readinessProbe:
            httpGet: { path: "/", port: {{ .Values.service.targetPort }} }
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet: { path: "/", port: {{ .Values.service.targetPort }} }
            initialDelaySeconds: 10
            periodSeconds: 20
          resources:
            requests:
              cpu: {{ .Values.resources.requests.cpu | quote }}
              memory: {{ .Values.resources.requests.memory | quote }}
            limits:
              cpu: {{ .Values.resources.limits.cpu | quote }}
              memory: {{ .Values.resources.limits.memory | quote }}
